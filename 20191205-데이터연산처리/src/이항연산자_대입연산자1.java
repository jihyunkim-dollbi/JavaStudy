// int a=10   10을 a에 넣어라. 뒤에서 앞으로. ->  a=a+1  a+1을 더해서 11이 된 값을 a에 넣어라. 11!

/* 
   utf-8
 * 대입연산자(오른쪽에서 => 왼쪽으로 이동하면서 )
 *   =>  =  => a=10; 10을 a메모리에 첨부
 *   << 복합대입 연산자  >>
 *   => +=
 *   int a=10;
 *   a+=10 ;  => 20
 *   
 *   int a=10;
 *   a+=1 ==> a=a+1 ==>11
 *   
 *   => -=
 *   
 *   int a=10
 *   
 *   a-=5  ==>-5
 *   a=a-5
 *   
 *   ==> *=
 *   
 *   int a=10
 *   a*=3 ==>30
 *   a=a*3
 *   
 *   ==> /=
 *   a/=2  ==>5
 *   
 *   a=a/2  - a=10/2  -->5
 *   
 *   ==>  int a=10;
 *   a<<=2 --40
 *   
 *   a>>=2 2
 *   
 *   ==> &= 
 *   int a=10
 *   a&=3
 *   
 *   a=a&3
 *     1010
 *     0011
 *     ====
 *     0010 - 2
 *     
 *     
 *     ==>  |=
 *     int a=10
 *     a|=3
 *     a=a|3
 *     
 *     10|3
 *     1010
 *     0011
 *     1011 --11
 *   
 *   ==> ^=
 *   int a=10
 *   a^=3
 *   
 *   a=a^3
 *   
 *    1010
 *    0011
 *    1001 - 9
 *   
 *   && 조건

 *   & 연산
 *   
 *   ==> = , += , -= 반드시 기억! 이것만 기억하면 됨
 *   
 *   
 *   비트, 쉬프트  x 
 *   2진법으로 바꿔서 하는 건 거의 필요 x
 *   
 *   가독성을 높여라!
 *   쉽고, 짧게, 최적화!
 *   
 *   리팩토링!! 쉬운 뜻으로 알기쉽게 쓸것!
 *   
 *   누적변수
 *   
 *   
 *   데이터형 
 *   byte : file, network
 *   int, long
 *   double
 *   String
 *   boolean
 *   ===================
 *   
 *   연산자
 *     ++ , -- , ! , (type)
 *     +,-, *, / ,%
 *     &&, ||
 *     ==, < , > , <= , >=
 *     = , += , -=
 *     ?, :
 */     
public class 이항연산자_대입연산자1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
        int a=10; // 10을 a에 대입해라.
        
	// 복합 대입 연산자
        a+=1; //a에 1을 더한 값을 대입해라.
        a=a+1;
        System.out.println(a);
        
        int b=1;
        
        b++;
        ++b;
        b+=10; // 하나씩 증가는 ++쓰고,, 5나 더 큰수씩 증가할땐  +=, a=a+5를 사용할 것. 10씩 더하기 때문에 더 빠르고 넓은 간격. 
        
        // 한개 증가 ==> a++, ++a, a+=1 , a=a+1
	}

}
