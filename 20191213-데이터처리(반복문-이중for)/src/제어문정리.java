/* 
 * 
 * 1. for loop ===================================
 *  
 * for(int i=1; i<=10;i++) // 여기서 int는 for문 안에서만 사용가능. 위에 int를 선언해주면 된다. 
 * {
 *   System.out.println(i);
 * }
 * 
 * 
 * 2. do~while loop ==============================
 * 
 * int i=1;
 * do
 *  {
 *     System.out.println(i);
 *     i++; 
 *    
 *  }while(i<=10);
 * 
 *  
 *  3. while loop ================================
 *  
 *   int i = 1;
 *  
 *   while(i<=10){
 *   
 *    System.out.println(i);
 *     i++;  
 *   }
 *  
 *   
 * 
 * 
 */
public class 제어문정리 {
	
	
int a = 100;   // 파란색 변수명 -  heap 영역에 저장됨 - 전역변수 ==> 따라서 다른 class 에서도 사용가능
	  
               // <클라이언트 => 메인폼 (연결고리:소켓) => 서버 (연결고리:소켓) => 메인폼 => 출력하러.
               // 클라이언트 단에서 입력받는 클래스는 단 한 개 이고,
               // 데이터가 프론트에서 입력되면
               // mianform에서 해당 프로그램에 정보를 전달함.   
               // mainform 에서 다시 출력함.
               // 메인에서 소켓을 가지고 있어서 메인하고 서버만 통신을 한다.  - 한군데서만 제어! 

               // 클라이언트에서는 자신이 보내지만 , 받아올 때는 쓰레드를 이용해서 받는다. 
               // (사람개수만큼 쓰레드가 필요하다. 그래서 동시에 이용가능.따라서 로그인 후 한 개인의 쓰레드가 자동 생성된다?)



     public static void main(String[] args) {
		// TODO Auto-generated method stub
            int a = 10; // 갈색 변수명 - stack 영역에 저장됨 - 지역변수   ==> 해당 class에서만 사용가능
                        // -->  블럭을 벗어나면 자동으로 메모리가 상실되어 해당 블럭안에서만 유효함.
	}

}
