/*
 *  데이터저장
 *  =======
 *  1) 변수 : 한개만 저장하는 공간
 *  2) 배열 : 같은 데이터크기를 저장하는 공간(여러개)
 *  3) 클래스 : 다른 데이터크기를 저장하는 공간(여러개)
 *  
 *  
 *  
 * 
 *  변수의 종류
 *  
 *  ===============================================================================
 *  			                          변수가 생성되는 시점                               변수가 소멸되는 시점 
 *  ===============================================================================
 *  
 *  지역변수					 메소드를 호출 할때    				    	메소드가 종료시({})		=> data 영역, stack 영역?
 *  (매개변수)					stack영역은 메모리 자체관리됨
 *  						(자동으로 소멸=> 블럭 끝나면)
 *  ===============================================================================
 *  
 *  맴버변수					new를 이요해서 매모리 공간 생성          객체가 null이 되거나 사용하지 않는 경우)(또는 클래스 자체에 null을 넣는경우)
 *  (전역변수)  																		=>  heap  영역
 *  =>인스턴스 변수                      heap 영역에 저장됨(new마다 따로 메모리가 생성)
 *  ===============================================================================
 *  
 *  => 정적변수  				컴파일되고 => 인터프리터시에 생성                클래스가 종료가 되면 소멸         ==> stack 영역
 *  static 변수,				a.java  ===> a.class ======> 출력
 *  공유 변수						  (컴파일 javac)  (인터프리터 java)
 *  ===============================================================================
 * 
 *  
 * 	형식 & 호출
 * 
 * 	class ClassName{
 * ===================
 * 변수(인스턴스 변수, static 변수)
 * ====================
 * 생성자 : 변수 초기화
 * ====================
 * 메소드=> 선언(지역변수)
 * ====================
 * 
 * }
 * 
 * 
 * 예)  class A{
 * 
 * 		int a;  //  생성(x)
 * 		static int b // 생성(o)
 *      }
 * 
 *       A aa = new A();
 *       인스턴스 접근 = 객체명.변수명(aa.a)   ==> Scanner scan = new Scanner(System.in); 인스턴스 매소드
 * 	     static 변수 = 객체명.변수명(aa.b)
 * 		                        클래스명.변수명(A.b)  ==> Math.random()       ==> static 메소드
 * 										==> String.valueOf()
 * =======================================>  .   (주소에 접근하는 연산자)
 * 
 */


public class MainClass4 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
